//Analysis Type - Classification 
#include <stdio.h>
#include <conio.h>
#include <math.h>
#include <stdlib.h>
double Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_input_hidden_weights[13][13]=
{
 {2.24456120035567e+000, -1.34894525493837e+001, 9.19226283467215e+000, 9.54349256284433e+000, -2.00869034273843e+001, -8.37669959113018e+000, 9.54473037458968e+000, -1.02944571574584e+001, 1.39945947534167e+001, 6.29622291224995e+000, -4.77419094350784e+000, -1.46825259107363e+001, 1.45796025573471e+001 },
 {-1.11125501830805e+001, -2.49907618801646e-001, -2.87437502974567e+000, -5.26177843382954e+000, -9.90699349798965e+000, 3.17091301498244e+000, 4.01192360145101e+000, -4.16065994212222e-001, -5.39625912003318e+000, 1.93714810862815e+001, -5.22971417342252e+000, 3.07314441359406e+000, 3.67064802603533e+000 },
 {-1.00208070946633e-001, 2.44048813936100e+000, -3.34909466581446e+000, -9.07230972755484e-001, 4.54555542611738e+000, 1.41798872878311e+000, 4.13220375788021e-001, 8.16496231321068e-001, -1.08289763777136e+001, 1.78542600157699e+000, 6.39912779919360e-002, 3.99198186010656e+000, 1.28640349356195e+001 },
 {-7.34650515639600e+000, -2.54761824444544e+000, 1.60940529700324e+000, -1.25585462104010e+000, -6.43093990641559e+000, 9.85750952338156e+000, -4.06910259369168e+000, 7.70366421836998e+000, 1.34785846944038e+001, 1.40987804644474e+001, -1.04530706999903e+001, -2.21902211109915e-002, 4.34840652913880e+000 },
 {-5.30903784314329e+000, -9.67634858696118e+000, 2.23293230581247e+000, -1.69239700507319e+001, -1.57112611705574e+001, -2.66570904369781e+000, -9.76062098076975e-001, 1.39657585325894e+000, 9.40226866592056e+000, 7.90171722834545e+000, 1.53918753147782e+000, 9.15670183065650e+000, -5.60770833632040e+000 },
 {-1.28796447538458e+001, -9.04590973498570e+000, -9.38493824938603e-001, -1.15800231991701e+001, 6.39213382453481e+000, 9.14407908935105e+000, -8.33678316517484e+000, 3.15671974068801e+000, -1.22765569848452e+001, -2.29686324883359e+000, -5.76499259386025e+000, 6.87898705907098e+000, -8.08405066387432e+000 },
 {2.37216099632243e+001, 5.35866249572981e+000, 4.02094185837447e+000, -1.12451521560538e+000, -1.04583379341535e+001, -1.70974050735817e+001, -2.86497521408303e+000, 1.31955137540277e+001, 9.05658917012378e+000, -1.15157720786990e+001, 5.68354167993496e+000, 1.30077769085882e+001, -2.27026660458895e+001 },
 {-1.04353322102733e+001, -9.31283270927452e+000, -8.62797705285604e+000, -1.26656598686710e+001, -2.77580645325657e+001, -1.47279560300608e+001, 1.43173537587085e+001, 1.12940343157052e+001, 5.33891428860592e+000, 1.12019181574484e+001, -8.06390971485543e+000, 1.06642199567424e+001, 8.23692023929391e+000 },
 {2.00122102679932e+001, 3.76342844837850e+000, -5.41495528401669e+000, -6.49233406390544e+000, -4.65051715475375e+000, 1.71841684147903e+000, -2.77042490556729e-001, -7.91170707943120e+000, -7.24545315061916e+000, -1.25604171439187e+001, -8.50835136359898e+000, 5.97695591392087e+000, -2.82003476616619e+000 },
 {-1.65486769104466e+001, -6.35932433291645e+000, -1.13319751214349e+001, 3.06674870088942e+000, 2.09724587442288e+001, -2.26692356851388e+000, 8.99463251314840e+000, -5.40436269330084e+000, -9.07517707677510e-001, 6.00341542878276e+000, -4.32139909179422e+000, 4.15493039990874e+000, -3.60861599809982e+000 },
 {2.03093394000680e+001, -1.16075081725048e+001, 1.17896642764324e+000, 3.67518102082978e+000, -1.69474693476257e+001, -2.99266030414290e+001, -1.06886070168673e+001, 1.80661315207563e+001, -8.33174753495512e+000, -1.30112924910299e+001, -6.72341695276691e+000, 1.18149320901810e+001, 7.77528092742718e+000 },
 {-2.61203007009853e+000, -3.19605008236531e-001, -9.18872385668029e-001, -2.58415233017151e-001, 5.12947861864901e+000, 3.53992294103379e+000, -2.74597993142025e-001, -1.29714148739203e+000, 1.71444327886710e+001, -6.28660735812026e-001, -2.09218308999515e-002, 8.34828702934116e-001, 1.42262312203803e+001 },
 {4.72894009740940e-001, 4.44965220063841e-001, 5.86305458117909e+000, -1.23969429303662e+001, -4.47633243527519e+000, 5.95846129350725e+000, -4.50837308117391e+000, -8.62571276568309e+000, 1.25219510148089e+001, -1.11207164354124e+001, -3.28903625676800e+000, -7.85269331601401e+000, 9.37681507655479e+000 } 
};

double Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_hidden_bias[13]={ -1.51498362038357e+001, 9.01236273507271e+000, -7.14156098424940e+000, -9.21482717070312e-001, -5.36551144242759e+000, 9.48655622532507e+000, 6.23800472982371e-001, -2.13517397525481e+000, -9.96332145570926e+000, 2.61186700703620e+000, -1.18284770572454e+000, -1.29925889227976e+001, -1.05980121468181e+001 };

double Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_hidden_output_wts[2][13]=
{
 {-9.24363393344225e-001, 1.45621859617473e+000, -8.47236562489350e+000, -5.64174795723845e+000, -5.12212420094828e+000, 1.88388156426595e+000, 1.73070130408376e+000, -1.59771281417958e+000, -8.86014116250565e+000, 6.16936304101374e-001, -1.40779195871727e+000, -2.68552828933782e+000, -3.50722336155447e+000 },
 {9.90986802587440e-001, -1.48483220602594e+000, 8.53946280562239e+000, 5.68971080264736e+000, 5.12215689953071e+000, -1.88183875836056e+000, -1.73444325936700e+000, 1.63555184796395e+000, 8.84736653046747e+000, -6.61696897118221e-001, 1.41508968835230e+000, 2.64378438622788e+000, 3.44290081956769e+000 }
};
double Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_output_bias[2]={ -1.27716978683374e+000, 1.24533965852457e+000 };

double Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_max_input[13]={ 1.00000000000000e+000, 1.00000000000000e+000, 1.00000000000000e+000, 1.00000000000000e+000, 1.00000000000000e+000, 1.00000000000000e+000, 5.00000000000000e-001, 1.00000000000000e+000, 1.00000000000000e+000, 1.00000000000000e+000, 1.00000000000000e+000, 1.00000000000000e+000, 2.37301004400000e+009 };

double Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_min_input[13]={ 0.00000000000000e+000, 0.00000000000000e+000, 0.00000000000000e+000, 0.00000000000000e+000, 0.00000000000000e+000, 0.00000000000000e+000, 0.00000000000000e+000, 0.00000000000000e+000, 0.00000000000000e+000, 0.00000000000000e+000, 0.00000000000000e+000, 0.00000000000000e+000, 1.06004728000000e+008 };

double Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_input[13];
double Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_hidden[13];
double Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_output[2];

double Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_MeanInputs[13]={ 4.93189557321226e-001, 4.30192962542565e-001, 3.96708286038592e-001, 4.54313280363224e-001, 3.70034052213394e-001, 4.34165720771850e-001, 2.00340522133939e-001, 3.33711691259932e-001, 3.49035187287174e-001, 7.02610669693530e-001, 2.68444948921680e-001, 3.11293984108967e-001, 2.30344472197503e+009 };

void Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_FindMax(double* vec, double* max, long* maxIndex,int len)
{
  long i;
  *max = vec[0];
  *maxIndex = 0;
  for(i=1; i<len; i++)
  {
    if(vec[i]>*max)
    {
      *max = vec[i];
      *maxIndex = i;
    }
  }
}

void Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_ScaleInputs(double* input, double minimum, double maximum, int size)
{
 double delta;
 long i;
 for(i=0; i<size; i++)
 {
	delta = (maximum-minimum)/(Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_max_input[i]-Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_min_input[i]);
	input[i] = minimum - delta*Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_min_input[i]+ delta*input[i];
 }
}

void Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_softmax(double* vec,int len)
{

  long i, j;
  double sum=0.0;
  for(i=0; i<len; i++)
  {
    if(vec[i]>200)
    {
      double max;
      long maxIndex;
      Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_FindMax(vec, &max, &maxIndex,len);
      for(j=0; j<len; j++)
      {        if(j==maxIndex) vec[j] = 1.0;
        else vec[j] = 0.0;
      }
      return;
    }
    else
    {
      vec[i] = exp(vec[i]);
    }
    sum += vec[i];
  }
  if(sum==0)
  {
   long a = 1;
  }
  if(sum!=0.0)
  {
    for(i=0; i<len; i++) vec[i] = vec[i]/sum;
  }
  else for(i=0; i<len; i++) vec[i] = 1.0/(double)len;
}

void Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_ComputeFeedForwardSignals(double* MAT_INOUT,double* V_IN,double* V_OUT, double* V_BIAS,int size1,int size2,int layer)
{
  int row,col;
  for(row=0;row < size2; row++) 
    {
      V_OUT[row]=0.0;
      for(col=0;col<size1;col++)V_OUT[row]+=(*(MAT_INOUT+(row*size1)+col)*V_IN[col]);
      V_OUT[row]+=V_BIAS[row];
      if(layer==0) V_OUT[row] = tanh(V_OUT[row]);
   }
}

void Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_RunNeuralNet_Classification () 
{
  Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_ComputeFeedForwardSignals((double*)Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_input_hidden_weights,Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_input,Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_hidden,Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_hidden_bias,13, 13,0);
  Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_ComputeFeedForwardSignals((double*)Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_hidden_output_wts,Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_hidden,Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_output,Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_output_bias,13, 2,1);
}
int main()
{
  int cont_inps;
  int index;
  int i=0;
  int keyin=1;
  double max;
  while(1)
  {
	max=3.e-300;
	printf("\n%s\n","Enter values for Continuous inputs (To skip a continuous input please enter -9999)");
	printf("%s","Cont. Input-0(x13): ");
	scanf("%lg",&Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_input[0]);
	printf("%s","Cont. Input-1(x18): ");
	scanf("%lg",&Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_input[1]);
	printf("%s","Cont. Input-2(x33): ");
	scanf("%lg",&Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_input[2]);
	printf("%s","Cont. Input-3(x8): ");
	scanf("%lg",&Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_input[3]);
	printf("%s","Cont. Input-4(x32): ");
	scanf("%lg",&Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_input[4]);
	printf("%s","Cont. Input-5(x11): ");
	scanf("%lg",&Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_input[5]);
	printf("%s","Cont. Input-6(x26): ");
	scanf("%lg",&Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_input[6]);
	printf("%s","Cont. Input-7(x10): ");
	scanf("%lg",&Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_input[7]);
	printf("%s","Cont. Input-8(x14): ");
	scanf("%lg",&Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_input[8]);
	printf("%s","Cont. Input-9(x16): ");
	scanf("%lg",&Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_input[9]);
	printf("%s","Cont. Input-10(x24): ");
	scanf("%lg",&Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_input[10]);
	printf("%s","Cont. Input-11(x6): ");
	scanf("%lg",&Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_input[11]);
	printf("%s","Cont. Input-12(ИНН): ");
	scanf("%lg",&Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_input[12]);
	for(cont_inps=0;cont_inps<13;cont_inps++)
	{
     //Substitution of missing continuous variables
     if(Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_input[cont_inps] == -9999)
	  Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_input[cont_inps]=Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_MeanInputs[cont_inps];
	}
    Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_ScaleInputs(Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_input,0,1,13);
	Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_RunNeuralNet_Classification();
   //Output Activation is Softmax;
	Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_softmax(Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_output, 2);
	for(i=0;i<2;i++)
	{
      if(max<Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_output[i])
      {
        max=Банкроты_400_(прогнозирование)+++_11_MLP_13_13_2_output[i];
        index=i+1;
      }
	}
	printf("\n%s","Predicted category = ");
    switch(index)
    {
        case 1: printf("%s\n","Низкая вероятность банкротства"); break;
        case 2: printf("%s\n","Высокая вероятность банкротства"); break;
        default: break;
    }
    printf("\n%s%.14f","Confidence level = ",max);
	printf("\n\n%s\n","Press any key to make another prediction or enter 0 to quit the program.");
	keyin=getch();
	if(keyin==48)break;
  }
	return 0;
}
